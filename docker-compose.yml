version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  mongo:
    image: mongo:latest
    container_name: comment_mongo
    restart: unless-stopped
    command: --replSet rs0
    environment:
      MONGO_INITDB_DATABASE: comments_db
    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' localhost:27017/test --quiet
      interval: 2s
      timeout: 3s
      retries: 5
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - comment_network

  mongo-init:
    image: mongo:latest
    restart: unless-stopped
    depends_on:
      - mongo
    networks:
      - comment_network
    command: >
      sh -c "sleep 5; mongosh --host mongo:27017 --eval '
      rs.initiate( {
        _id : \"rs0\",
        members: [
          { _id: 0, host: \"mongo:27017\" }
        ]
      })
      '"

volumes:
  esdata:
  mongo_data:
  
networks:
  comment_network:
    driver: bridge